{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dneub\\\\Documents\\\\HW\\\\Week-Twenty-react\\\\GoogleBooks-\\\\client\\\\src\\\\pages\\\\BooksAPI.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { LikeButton } from '../components/LikeButton';\nimport { BookContext } from '../context/BookContext';\n\nvar BooksAPI = function BooksAPI() {\n  // const [formData, setFormData] = useState({\n  //   author: '',\n  //   synopsis: '',\n  //   title: ''\n  // });\n  // const {books, setBooks} = useContext(BookContext);\n  // const loadBooks = () => {\n  //   API.getBooks()\n  //     .then(res => {\n  //       setBooks(res.data)\n  //     }\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n  // useEffect(() => {\n  //    if (books.length === 0) {\n  //    loadBooks();\n  //    }\n  //  }, []);\n  // const deleteBook = id => {\n  //   API.deleteBook(id)\n  //     .then(res => {\n  //       const remainingBooks = books.filter(book => book._id !== id);\n  //       setBooks(remainingBooks);\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n  // const incrementLikes = id => {\n  //   console.log('id of book to increase likes', id, books);\n  //   const indexToUpdate = books.findIndex(book => book._id === id);\n  //   const newBooks = [...books];\n  //   newBooks[indexToUpdate].likes = newBooks[indexToUpdate].likes ? newBooks[indexToUpdate].likes + 1 : 1;\n  //   setBooks(newBooks);\n  // }\n  // const handleInputChange = event => {\n  //   const { name, value } = event.target;\n  //   setFormData({\n  //     ...formData,\n  //     [name]: value\n  //   })\n  // };\n  var handleInputChangeSearch = function handleInputChangeSearch(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    console.log(name, value);\n  };\n\n  return React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Col, {\n    size: \"md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Input, {\n    onChange: handleInputChangeSearch,\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(FormBtn, {\n    onClick: handleBookSearchClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Search Book\")))));\n};\n\nexport default BooksAPI;","map":{"version":3,"sources":["C:/Users/dneub/Documents/HW/Week-Twenty-react/GoogleBooks-/client/src/pages/BooksAPI.js"],"names":["React","useContext","useEffect","useState","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","LikeButton","BookContext","BooksAPI","handleInputChangeSearch","event","target","name","value","console","log","handleBookSearchClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK,EAAI;AAAA,wBAChBA,KAAK,CAACC,MADU;AAAA,QAChCC,IADgC,iBAChCA,IADgC;AAAA,QAC1BC,KAD0B,iBAC1BA,KAD0B;AAEvCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,KAAlB;AACD,GAHD;;AAKA,SACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEJ,uBADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEO,qBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CAFF,CADF,CADF,CADF;AAsBH,CA7ED;;AA+EA,eAAeR,QAAf","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport { LikeButton } from '../components/LikeButton';\r\nimport { BookContext } from '../context/BookContext';\r\n\r\nconst BooksAPI = () => {\r\n  // const [formData, setFormData] = useState({\r\n  //   author: '',\r\n  //   synopsis: '',\r\n  //   title: ''\r\n  // });\r\n  // const {books, setBooks} = useContext(BookContext);\r\n\r\n  // const loadBooks = () => {\r\n  //   API.getBooks()\r\n  //     .then(res => {\r\n  //       setBooks(res.data)\r\n  //     }\r\n  //     )\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //    if (books.length === 0) {\r\n  //    loadBooks();\r\n  //    }\r\n  //  }, []);\r\n\r\n  // const deleteBook = id => {\r\n  //   API.deleteBook(id)\r\n  //     .then(res => {\r\n  //       const remainingBooks = books.filter(book => book._id !== id);\r\n  //       setBooks(remainingBooks);\r\n  //     })\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  // const incrementLikes = id => {\r\n  //   console.log('id of book to increase likes', id, books);\r\n  //   const indexToUpdate = books.findIndex(book => book._id === id);\r\n  //   const newBooks = [...books];\r\n  //   newBooks[indexToUpdate].likes = newBooks[indexToUpdate].likes ? newBooks[indexToUpdate].likes + 1 : 1;\r\n  //   setBooks(newBooks);\r\n\r\n  // }\r\n\r\n  // const handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n  //   setFormData({\r\n  //     ...formData,\r\n  //     [name]: value\r\n  //   })\r\n  // };\r\n\r\n\r\n    const handleInputChangeSearch = event => { \r\n      const {name, value } = event.target; \r\n      console.log(name, value)\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n           \r\n            <form>\r\n              <Input\r\n                onChange={handleInputChangeSearch}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n             \r\n              <FormBtn\r\n                onClick={handleBookSearchClick}\r\n              >\r\n                Search Book\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default BooksAPI;\r\n"]},"metadata":{},"sourceType":"module"}